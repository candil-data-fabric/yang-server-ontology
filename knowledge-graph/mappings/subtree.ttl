
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rml: <http://w3id.org/rml/> .
@prefix qudt: <http://qudt.org/2.1/schema/qudt#> .
@prefix ys: <https://w3id.org/yang/server#> .
@prefix ifaces: <https://w3id.org/interfaces#> .
@base <https://interfaces.org/> .

# Basic details for connecting to NETCONF server
<netconf-server-1> a ys:NetconfServer ;
    ys:endpoint "192.168.1.10:830" ;
    ys:username "admin" ;
    ys:password "admin" ;
    ys:hostKeyVerification "false" ;
.

# In this example the NETCONF server is non-NMDA compatible.
# Thus, only operational and running datastores are available.
<datastores/netconf-server-1/operational> a ys:OperationalDatastore .
<datastores/netconf-server-1/running> a ys:RunningDatastore .

<netconf-server-1> ys:datastore <datastores/netconf-server-1/operational> .
<netconf-server-1> ys:datastore <datastores/netconf-server-1/running> .

# Note that ys:Query is processed as part of the RML mapping
# rml:iterator replaces the ys:Filter in the YANG query
<#TriplesMap> a rml:TriplesMap;
  rml:logicalSource [ a rml:LogicalSource;
    rml:source [ a ys:Query, rml:Source ;
      ys:sourceServer <netconf-server-1> ;
      ys:sourceDatastore <datastores/netconf-server-1/operational> ;
      ys:filter [ a ys:SubtreeFilter ;
        ys:subtreeValue '''
        <interfaces xmlns="urn:ietf:params:xml:ns:yang:ietf-interfaces">
          <interface>
          </interface>
        </interfaces>
        ''';
      ];
    ];
    rml:referenceFormulation [ a rml:XPathReferenceFormulation;
      rml:namespace [ a rml:Namespace ;
        rml:namespacePrefix "if" ;
        rml:namespaceURL "urn:ietf:params:xml:ns:yang:ietf-interfaces" ;
      ];
      rml:namespace [ a rml:Namespace ;
          rml:namespacePrefix "ip" ;
          rml:namespaceURL "urn:ietf:params:xml:ns:yang:ietf-ip" ;
      ];
    ];
    rml:iterator "/if:interfaces/if:interface";
  ];
  rml:subjectMap [ a rml:SubjectMap;
    rml:template "http://example.org/module/{if:name/text()}";
    rml:class ifaces:Interface;
  ];
  rml:predicateObjectMap [ a rml:PredicateObjectMap;
    rml:predicateMap [ a rml:PredicateMap;
      rml:constant ifaces:name;
    ];
    rml:objectMap [ a rml:ObjectMap;
      rml:reference "if:name/text()";
    ];
  ];
  rml:predicateObjectMap [ a rml:PredicateObjectMap;
    rml:predicateMap [ a rml:PredicateMap;
      rml:constant ifaces:enabled;
    ];
    rml:objectMap [ a rml:ObjectMap;
      rml:reference "if:enabled/text()";
    ];
  ];
  rml:predicateObjectMap [ a rml:PredicateObjectMap;
    rml:predicateMap [ a rml:PredicateMap;
      rml:constant ifaces:ipv4enabled;
    ];
    rml:objectMap [ a rml:ObjectMap;
      rml:reference "ip:ipv4/ip:enabled/text()";
    ];
  ];
.
